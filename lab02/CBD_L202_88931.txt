// NMEC: 88931

#1
db.rest.find()

#2
db.rest.find({}, {_id: 0, restaurant_id:1, nome:1, localidade: 1, gastronomia: 1})

#3
db.rest.find({}, {_id: 0, restaurant_id:1, nome:1, localidade: 1, "address.zipcode": 1})

#4
db.rest.aggregate( [ {$match: {localidade:"Bronx"}}, {$group: {_id: "$localidade", total: {$sum: 1}}} ] )

#5
db.rest.find({localidade:"Bronx"} ).limit(5)

#6
// I filtered the results to return the documents where one of the values on the
// scores' array is bigger than 85
db.rest.find({ "grades.score": {$gte:85} })

#7
db.rest.find({ grades: { $elemMatch:{ score:{ $gte:85, $lte:100 } } } })

#8
db.rest.find( { "address.coord.0": {$lt:-95.7} } )

#9
db.rest.find( {"address.coord.0":{$lt:-65}, gastronomia:{$ne:"American"}, "grades.score":{$gt:70} } )

#10
db.rest.find( {"address.coord.0":{$lt:-65}, gastronomia:{$ne:"American"}, "grades.score":{$gt:70} } )

#11
db.rest.find( {localidade:"Bronx", $or:[{gastronomia:"American"}, {gastronomia:"Chinese"}] } )

#12
db.rest.find( {$or:[{localidade":Bronx"},{localidade:"Staten Island"},{localidade:"Queens"},{localidade:"Brooklyn"}]}, {nome:1, localidade:1, gastronomia:1} )

#13
db.rest.find({"grades.score":{$not: {$gt: 3}}},{localidade:1, nome:1, "grades.score":1, gastronomia:1})

#14
// apenas retorna os restaurantes que tenham pelo menos um grade que contemple as 3 especificacoes
db.getCollection('rest').find({"grades":{$elemMatch:{score:10,grade:"A",date:ISODate("2014-08-11T00:00:00Z")} }})
